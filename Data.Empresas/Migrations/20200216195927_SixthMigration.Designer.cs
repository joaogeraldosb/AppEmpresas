// <auto-generated />
using System;
using Data.Empresas.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Empresas.Migrations
{
    [DbContext(typeof(EmpresasContext))]
    [Migration("20200216195927_SixthMigration")]
    partial class SixthMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Empresas.Entities.ControlToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime?>("AuthenticationDate");

                    b.Property<string>("Client")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .IsUnicode(false);

                    b.Property<int>("IdUser");

                    b.Property<DateTime>("SolicitationDate");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("ControlTokens");
                });

            modelBuilder.Entity("Domain.Empresas.Entities.Enterprise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("IdEnterpriseType");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("IdEnterpriseType");

                    b.ToTable("Enterprises");
                });

            modelBuilder.Entity("Domain.Empresas.Entities.EnterpriseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EnterpriseTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = false,
                            Name = "Agro"
                        },
                        new
                        {
                            Id = 2,
                            Active = false,
                            Name = "Aviation"
                        },
                        new
                        {
                            Id = 3,
                            Active = false,
                            Name = "Biotech"
                        },
                        new
                        {
                            Id = 4,
                            Active = false,
                            Name = "Eco"
                        },
                        new
                        {
                            Id = 5,
                            Active = false,
                            Name = "Ecommerce"
                        },
                        new
                        {
                            Id = 6,
                            Active = false,
                            Name = "Education"
                        },
                        new
                        {
                            Id = 7,
                            Active = false,
                            Name = "Fashion"
                        },
                        new
                        {
                            Id = 8,
                            Active = false,
                            Name = "Fintech"
                        },
                        new
                        {
                            Id = 9,
                            Active = false,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 10,
                            Active = false,
                            Name = "Games"
                        },
                        new
                        {
                            Id = 11,
                            Active = false,
                            Name = "Health"
                        },
                        new
                        {
                            Id = 12,
                            Active = false,
                            Name = "IOT"
                        },
                        new
                        {
                            Id = 13,
                            Active = false,
                            Name = "Logistics"
                        },
                        new
                        {
                            Id = 14,
                            Active = false,
                            Name = "Media"
                        },
                        new
                        {
                            Id = 15,
                            Active = false,
                            Name = "Mining"
                        },
                        new
                        {
                            Id = 16,
                            Active = false,
                            Name = "Products"
                        },
                        new
                        {
                            Id = 17,
                            Active = false,
                            Name = "Real Estate"
                        },
                        new
                        {
                            Id = 18,
                            Active = false,
                            Name = "Service"
                        },
                        new
                        {
                            Id = 19,
                            Active = false,
                            Name = "Smart City"
                        },
                        new
                        {
                            Id = 20,
                            Active = false,
                            Name = "Social"
                        },
                        new
                        {
                            Id = 21,
                            Active = false,
                            Name = "Software"
                        },
                        new
                        {
                            Id = 22,
                            Active = false,
                            Name = "Technology"
                        },
                        new
                        {
                            Id = 23,
                            Active = false,
                            Name = "Tourism"
                        },
                        new
                        {
                            Id = 24,
                            Active = false,
                            Name = "Transport"
                        });
                });

            modelBuilder.Entity("Domain.Empresas.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .IsUnicode(false);

                    b.Property<byte[]>("Senha")
                        .IsRequired();

                    b.Property<DateTime?>("UltimoLogin");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Empresas.Entities.ControlToken", b =>
                {
                    b.HasOne("Domain.Empresas.Entities.User", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Domain.Empresas.Entities.Enterprise", b =>
                {
                    b.HasOne("Domain.Empresas.Entities.EnterpriseType", "EnterpriseType")
                        .WithMany("Enterprises")
                        .HasForeignKey("IdEnterpriseType")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("Domain.Empresas.ComplexTypes.Contact", "Contact", b1 =>
                        {
                            b1.Property<int>("EnterpriseId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("CellPhone")
                                .IsRequired()
                                .HasColumnName("CellPhone")
                                .HasColumnType("varchar(15)");

                            b1.Property<string>("ContactName")
                                .IsRequired()
                                .HasColumnName("ContactName")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Phone")
                                .HasColumnName("Phone")
                                .HasColumnType("varchar(15)");

                            b1.HasKey("EnterpriseId");

                            b1.ToTable("Enterprises","dbo");

                            b1.HasOne("Domain.Empresas.Entities.Enterprise")
                                .WithOne("Contact")
                                .HasForeignKey("Domain.Empresas.ComplexTypes.Contact", "EnterpriseId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
