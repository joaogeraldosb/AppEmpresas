// <auto-generated />
using System;
using Data.Empresas.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Empresas.Migrations
{
    [DbContext(typeof(EmpresasContext))]
    partial class EmpresasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Empresas.Entities.Enterprise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("IdEnterpriseType");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("IdEnterpriseType");

                    b.ToTable("Enterprises");
                });

            modelBuilder.Entity("Domain.Empresas.Entities.EnterpriseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("EnterpriseTypes");
                });

            modelBuilder.Entity("Domain.Empresas.Entities.Enterprise", b =>
                {
                    b.HasOne("Domain.Empresas.Entities.EnterpriseType", "EnterpriseType")
                        .WithMany("Enterprises")
                        .HasForeignKey("IdEnterpriseType")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("Domain.Empresas.Entities.Contact", "Contact", b1 =>
                        {
                            b1.Property<int>("EnterpriseId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("CellPhone")
                                .IsRequired()
                                .HasColumnName("CellPhone")
                                .HasColumnType("varchar(15)");

                            b1.Property<string>("ContactName")
                                .IsRequired()
                                .HasColumnName("ContactName")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Phone")
                                .HasColumnName("Phone")
                                .HasColumnType("varchar(15)");

                            b1.HasKey("EnterpriseId");

                            b1.ToTable("Enterprises","dbo");

                            b1.HasOne("Domain.Empresas.Entities.Enterprise")
                                .WithOne("Contact")
                                .HasForeignKey("Domain.Empresas.Entities.Contact", "EnterpriseId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
